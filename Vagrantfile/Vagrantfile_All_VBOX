Vagrant.configure("2") do |config|

  config.vm.define "openvpn" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.hostname = "openvpn"

    subconfig.vm.network "forwarded_port", id: "ssh", host: 3737, guest: 22
    subconfig.vm.network "forwarded_port", id: "openvpn", host: 1194, guest: 1194
    subconfig.vm.network "forwarded_port", id: "portianer", host: 9445, guest: 9445
    subconfig.vm.network "public_network", ip: "192.168.0.200"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "openvpn"
      v.customize ["modifyvm", :id, "--memory", "2048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


  config.vm.define "wireguard" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.network "forwarded_port", id: "ssh", host: 3738, guest: 22
    subconfig.vm.network "forwarded_port", id: "wireguard", host: 51820, guest: 51820
    subconfig.vm.network "private_network", ip: "10.11.10.3", virtualbox__intnet: true
    subconfig.vm.hostname = "wireguard"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "wireguard"
      v.customize ["modifyvm", :id, "--memory", "2048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


config.vm.define "nextcloud" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.network "forwarded_port", id: "ssh", host: 3741, guest: 22
    subconfig.vm.network "forwarded_port", id: "nextcloud", host: 81, guest: 81
    subconfig.vm.network "forwarded_port", id: "nextcloud", host: 4433, guest: 4433
    subconfig.vm.network "private_network", ip: "10.11.10.4", virtualbox__intnet: true
    subconfig.vm.hostname = "nextcloud"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "nextcloud"
      v.customize ["modifyvm", :id, "--memory", "2048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


config.vm.define "ejabberd" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.network "forwarded_port", id: "ssh", host: 3739, guest: 22
    subconfig.vm.network "forwarded_port", id: "ejabberd", host: 5280, guest: 5280
    subconfig.vm.network "forwarded_port", id: "ejabberd", host: 5222, guest: 5222
    subconfig.vm.network "private_network", ip: "10.11.10.5", virtualbox__intnet: true
    subconfig.vm.hostname = "ejabberd"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "ejabberd"
      v.customize ["modifyvm", :id, "--memory", "4048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


config.vm.define "mysql" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.network "forwarded_port", id: "ssh", host: 3740, guest: 22
    subconfig.vm.network "forwarded_port", id: "mysql", host: 3360, guest: 3306
    subconfig.vm.network "private_network", ip: "10.11.10.6", virtualbox__intnet: true
    subconfig.vm.hostname = "mysql"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "mysql"
      v.customize ["modifyvm", :id, "--memory", "4048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


config.vm.define "postgresql" do |subconfig|
    subconfig.vm.box = "ubuntu/focal64"
    subconfig.vm.network "forwarded_port", id: "ssh", host: 3742, guest: 22
    subconfig.vm.network "forwarded_port", id: "postgresql", host: 5432, guest: 5432
    subconfig.vm.network "private_network", ip: "10.11.10.7", virtualbox__intnet: true
    subconfig.vm.hostname = "postgresql"
    subconfig.disksize.size = '100GB'
    subconfig.vm.provider "virtualbox" do |v|
      v.name = "postgresql"
      v.customize ["modifyvm", :id, "--memory", "4048"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
    end
  end


  config.vm.provision "shell" do |s|
    ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    s.inline = <<-SHELL
    echo {ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
    echo {ssh_pub_key} >> /root/.ssh/authorized_keys
    SHELL
  end
end
